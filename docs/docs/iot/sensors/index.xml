<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cluster PI â€“ Sensors</title>
    <link>/docs/iot/sensors/</link>
    <description>Recent content in Sensors on Cluster PI</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="/docs/iot/sensors/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Temperature</title>
      <link>/docs/iot/sensors/temperature/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/iot/sensors/temperature/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Docs: Compass</title>
      <link>/docs/iot/sensors/compass/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/iot/sensors/compass/</guid>
      <description>
        
        
        &lt;p&gt;THIS SECTION IS INCOMPLETE&lt;/p&gt;
&lt;p&gt;The default pins are defined in variants/nodemcu/pins_arduino.h as GPIO&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    SDA=4
    SCL=5
    D1=5
    D2=4.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You can also choose the pins yourself using the I2C constructor
Wire.begin(int sda, int scl);&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Light</title>
      <link>/docs/iot/sensors/light/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/iot/sensors/light/</guid>
      <description>
        
        
        &lt;p&gt;The light sensor used in this example can be purchased &lt;a href=&#34;https://www.amazon.com/Gowoops-Digital-Intensity-Detection-Photosensitive/dp/B01N1FKS4L/ref=sr_1_3?ie=UTF8&amp;amp;qid=1543528066&amp;amp;sr=8-3&amp;amp;keywords=arduino+light+sensor+module&#34;&gt;individually&lt;/a&gt; or as part of a sensor kit.  To set up the light sensor module connect the wires to the Raspberry Pi as shown in @fig:light_setup.  The sensor shown in this example has three pins.  However, some sensor modules may have four pins.  In most cases the extra pin is not necessary.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;light_setup.png&#34; alt=&#34;Light Sensor Setup&#34;&gt;{#fig:light_setup}&lt;/p&gt;
&lt;p&gt;Once you have set up the light sensor you can use the light_sensor class to retrieve data from the light sensors.  The light sensor will return &amp;ldquo;1&amp;rdquo; if light is not detected and a &amp;ldquo;0&amp;rdquo; if the sensor detects light.  Some sensor modules also include a potentiometer which can be adjusted to change the sensitivity of the light sensor.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;
&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;RPi.GPIO&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;GPIO&lt;/span&gt;
&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;time&lt;/span&gt;
&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;sys&lt;/span&gt;
&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;os&lt;/span&gt;

&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#00f&#34;&gt;LightSensor&lt;/span&gt;(&lt;span style=&#34;color:#a2f&#34;&gt;object&lt;/span&gt;):
	&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;&amp;#34;&amp;#34;Pin numbers for LightSensor are based on BOARD numbers by default.
&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;	The number 1 will be returned if the light sensor is off and 0 if the
&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;	sensor is activated.
&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;	&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
	&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;def&lt;/span&gt; __init__(self, pin&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;7&lt;/span&gt;, pin_setup&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;BOARD&amp;#39;&lt;/span&gt;):
		self&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;pin &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; pin
		&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;if&lt;/span&gt; pin_setup &lt;span style=&#34;color:#666&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;BCM&amp;#39;&lt;/span&gt;:
			GPIO&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;setmode(GPIO&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;BCM)
		&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;else&lt;/span&gt;:
			GPIO&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;setmode(GPIO&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;BOARD)
		GPIO&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;setwarnings(False)
		GPIO&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;setup(self&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;pin,GPIO&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;IN)
			
	&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#00a000&#34;&gt;get&lt;/span&gt;(self):
		&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;return&lt;/span&gt; GPIO&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;input(self&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;pin)


&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;if&lt;/span&gt; __name__ &lt;span style=&#34;color:#666&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;:
	&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;try&lt;/span&gt;:
		light &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; LightSensor(pin&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;11&lt;/span&gt;)
		&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;while&lt;/span&gt; True:
			&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;print&lt;/span&gt;(light&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;get())
			time&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;sleep(&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;)
	&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;except&lt;/span&gt; &lt;span style=&#34;color:#d2413a;font-weight:bold&#34;&gt;KeyboardInterrupt&lt;/span&gt;:
		&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;\n\n&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt; *** Stopping Program ***&amp;#39;&lt;/span&gt;)
		&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;try&lt;/span&gt;:
			sys&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;exit(&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;)
		&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;except&lt;/span&gt; &lt;span style=&#34;color:#d2413a;font-weight:bold&#34;&gt;SystemExit&lt;/span&gt;:
			os&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;_exit(&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://www.amazon.com/Gowoops-Digital-Intensity-Detection-Photosensitive/dp/B01N1FKS4L/ref=sr_1_3?ie=UTF8&amp;amp;qid=1543528066&amp;amp;sr=8-3&amp;amp;keywords=arduino+light+sensor+module&#34;&gt;Sensor on Amazon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/cloudmesh-community/fa18-523-84/blob/master/paper/code/light_sensor.py&#34;&gt;Source: Light Sensor Class&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.uugear.com/portfolio/using-light-sensor-module-with-raspberry-pi/&#34;&gt;UGEAR light sensor&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Positioning</title>
      <link>/docs/iot/sensors/positioning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/iot/sensors/positioning/</guid>
      <description>
        
        
        &lt;h2 id=&#34;marvelmind&#34;&gt;Marvelmind&lt;/h2&gt;
&lt;p&gt;An indoor positioning and navigation system
for autonomous robots, drones, vehicles and humans. Its precision is +- 2 cm&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://marvelmind.com/&#34;&gt;Marvelmind&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Touch</title>
      <link>/docs/iot/sensors/touch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/iot/sensors/touch/</guid>
      <description>
        
        
        &lt;h2 id=&#34;capacitive-touch-sensor-module&#34;&gt;Capacitive Touch Sensor Module&lt;/h2&gt;
&lt;p&gt;In this example we are using a &lt;a href=&#34;https://www.adafruit.com/product/1374&#34;&gt;momentary capacitive touch sensor&lt;/a&gt;.  The sensor kits mentioned in this book will also contain this sensor.  To set up the touch sensor connect the wires to the Raspberry Pi as shown in @fig:touch_setup.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;touch_setup.png&#34; alt=&#34;Touch Sensor Setup&#34;&gt;{#fig:touch_setup}&lt;/p&gt;
&lt;p&gt;Once you have set up the sensor you can use the touch_sensor class to execute another function when the sensor is touched.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;
&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;RPi.GPIO&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;GPIO&lt;/span&gt;
&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;time&lt;/span&gt;
&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;sys&lt;/span&gt;
&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#00f;font-weight:bold&#34;&gt;os&lt;/span&gt;

&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#00f&#34;&gt;TouchSensor&lt;/span&gt;(&lt;span style=&#34;color:#a2f&#34;&gt;object&lt;/span&gt;):
	&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;&amp;#34;&amp;#34;docstring for TouchSensor&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
	&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;def&lt;/span&gt; __init__(self, function, &lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;args, pin&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;7&lt;/span&gt;, pin_setup&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;BOARD&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#666&#34;&gt;**&lt;/span&gt;kwargs):
		self&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;pin &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; pin
		&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;if&lt;/span&gt; pin_setup &lt;span style=&#34;color:#666&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;BCM&amp;#39;&lt;/span&gt;:
			GPIO&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;setmode(GPIO&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;BCM)
		&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;else&lt;/span&gt;:
			GPIO&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;setmode(GPIO&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;BOARD)
		GPIO&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;setwarnings(False)
		GPIO&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;setup(self&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;pin,GPIO&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;IN)
		GPIO&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;remove_event_detect(self&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;pin)
		GPIO&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;add_event_detect(self&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;pin, GPIO&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;RISING, callback&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;lambda&lt;/span&gt; x: self&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;callback(function, &lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;args, &lt;span style=&#34;color:#666&#34;&gt;**&lt;/span&gt;kwargs))
		
	&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#00a000&#34;&gt;callback&lt;/span&gt;(self, function, &lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;args, &lt;span style=&#34;color:#666&#34;&gt;**&lt;/span&gt;kwargs):
		&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;if&lt;/span&gt; GPIO&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;input(self&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;pin) &lt;span style=&#34;color:#666&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;:
			function(&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;args, &lt;span style=&#34;color:#666&#34;&gt;**&lt;/span&gt;kwargs)
		&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;else&lt;/span&gt;:
			&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;pass&lt;/span&gt;
		

&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;# wait for touch sensor activation&lt;/span&gt;

&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;if&lt;/span&gt; __name__ &lt;span style=&#34;color:#666&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;:
	&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;try&lt;/span&gt;:
		&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#00a000&#34;&gt;touch_print&lt;/span&gt;(text):
			&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;print&lt;/span&gt;(text)

		TouchSensor(touch_print, &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;Hey!&amp;#39;&lt;/span&gt;, pin&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;13&lt;/span&gt;)
		&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;while&lt;/span&gt; True:
			time&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;sleep(&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;)		
	&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;except&lt;/span&gt; &lt;span style=&#34;color:#d2413a;font-weight:bold&#34;&gt;KeyboardInterrupt&lt;/span&gt;:
		&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;\n\n&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt; *** Stopping Program ***&amp;#39;&lt;/span&gt;)
		&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;try&lt;/span&gt;:
			sys&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;exit(&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;)
		&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;except&lt;/span&gt; &lt;span style=&#34;color:#d2413a;font-weight:bold&#34;&gt;SystemExit&lt;/span&gt;:
			os&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;_exit(&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/cloudmesh-community/fa18-523-84/blob/master/paper/code/touch_sensor.py&#34;&gt;Touch Sensor Class&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://sourceforge.net/p/raspberry-gpio-python/wiki/Inputs/&#34;&gt;Raspberry PI GPIO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/16143842/raspberry-pi-gpio-events-in-python&#34;&gt;GPIO Events&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

      </description>
    </item>
    
  </channel>
</rss>
